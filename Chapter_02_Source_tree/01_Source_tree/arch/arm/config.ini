# Configuration file (included from Makefile)


# Common configuration
#------------------------------------------------------------------------------
OS_NAME = "OSIER"
NAME_MAJOR := $(shell basename "`cd ..; pwd -P`")
NAME_MINOR := $(shell basename "`pwd -P`")
PROJECT := $(NAME_MINOR)

PLATFORM ?= arm
VERSION = 1.0
AUTHOR = leonardo@zemris.fer.hr

# Intermediate and output files are placed into BUILDDIR
BUILDDIR = build


# Where will system be loaded when started (for which address to prepare it)
LOAD_ADDR = 0x10000

# System resources
#------------------------------------------------------------------------------
STACK_SIZE = 0x1000


# Library with utility functions (strings, lists, ...)
#------------------------------------------------------------------------------
LIBS = lib


# Compiling and linking
#------------------------------------------------------------------------------
LINK = arm-none-eabi-ld
LDSCRIPT = $(BUILDDIR)/ARCH/boot/ldscript.ld
LDFLAGS = -marmelf -lm -lgcc

#fix for library path (in my system its not set properly so must do it manualy)
LDFLAGS += -L/opt/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/lib/gcc/arm-none-eabi/4.7.3/ \
	-L/opt/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/arm-none-eabi/lib

LDFLAGS_OPT = -O3 -s
LDFLAGS_OPTD = -O3

CC = arm-none-eabi-gcc

CFLAGS = -mcpu=arm926ej-s -Wall -nostdinc -ffreestanding -nostdlib -fno-stack-protector -mabi=aapcs-linux

# additional optimization flags
CFLAGS_OPT = -O3

#optimization with debug information
CFLAGS_OPTD = -O3

# Linker flags
#if in command line given: debug=yes or/and optimize=yes
ifeq ($(debug),yes)
CFLAGS += -g
CMACROS += DEBUG
ifeq ($(optimize),yes) #if both are set!
CFLAGS += $(CFLAGS_OPTD)
LDFLAGS += $(LDFLAGS_OPTD)
endif
else #optimize by default
CFLAGS += $(CFLAGS_OPT)
LDFLAGS += $(LDFLAGS_OPT)
endif


# directories to include while compiling
DIRS_K := arch/$(PLATFORM)/boot arch/$(PLATFORM) arch/$(PLATFORM)/drivers \
	kernel $(LIBS)
DIRS_P := api programs/hello_world

DIRS := $(DIRS_K) $(DIRS_P)

# include dirs
INCLUDES := include $(BUILDDIR) include/api

QEMU = qemu-system-$(PLATFORM)
QFLAGS = -M versatilepb -m 4M -nographic
QMSG = "Starting qemu ... (press Ctrl+a then x to stop)"

# Power off when all programs completed? Can't for this platform!
TURN_OFF ?= 0   #or: override TURN_OFF = 0
